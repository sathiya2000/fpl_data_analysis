CREATE DATABASE SATHIYADB;

//create schema newSchema;

//create Storage Integration with AWS S3

CREATE OR REPLACE STORAGE INTEGRATION S3_CONN
  TYPE = EXTERNAL_STAGE
  STORAGE_PROVIDER = 'S3'
  ENABLED = TRUE
  STORAGE_AWS_ROLE_ARN = 'arn:aws:iam::682929251223:role/s3-snowflake-connection'
  STORAGE_ALLOWED_LOCATIONS = ('s3://fpl-etl-project-sathiya/transformed_data')
  COMMENT = 'Create Storage Connection with AWS S3';

Desc integration s3_conn;

//create PL Table

CREATE OR REPLACE TABLE SATHIYADB.PUBLIC.PL_TABLE (
    ID INT,
    TEAM_POSITION INT,
    CLUB VARCHAR(10),
    PLAYED INT,
    WON INT,
    DRAW INT,
    LOSS INT,
    GF INT,
    GA INT,
    GD INT,
    POINTS INT,
    NEXT_MATCH VARCHAR(10));

//with location = @AWS_STAGE1 file_format = 'CSV_FILEFORMAT';

//alter table SATHIYADB.PUBLIC.PL_TABLE add column TEST_COL number as (value:TEST_COL::number);

//create fixture table

CREATE OR REPLACE TABLE SATHIYADB.PUBLIC.FIXTURE_DATA (
    ID INT,
    MATCH_ID INT,
    GAMEWEEK INT,
    KICKOFF_TIME DATETIME,
    STARTED BOOLEAN,
    FINISHED BOOLEAN,
    MINUTES INT,
    HOME_TEAM INT,
    HOME_SCORE INT,
    AWAY_TEAM INT,
    AWAY_SCORE INT,
    HOME_DIFF INT,
    AWAY_DIFF INT,
    CODE INT,
    PULSE_ID INT);

//CREATE INDIVIDUAL PLAYER DATA TABLE

CREATE OR REPLACE TABLE SATHIYADB.PUBLIC.GM_PLAYER_DATA (
    ID INT,
    PLAYER_ID INT,
    MINUTES_PLAYED INT,
    GOALS INT,
    ASSISTS INT,
    CLEAN_SHEETS INT,
    GOALS_CONCEDED INT,
    OWN_GOALS INT,
    PENALTIES_SCORED INT,
    PENALTIES_MISSED INT,
    YELLOW_CARDS INT,
    RED_CARDS INT,
    SAVES INT,
    BPS INT,
    PLAYER_INFLUENCE FLOAT,
    PLAYER_CREATIVITY FLOAT,
    PLAYER_THREAT FLOAT,
    PLAYER_STARTS FLOAT,
    ICT_INDEX FLOAT,
    EXPECTED_GOALS FLOAT,
    EXPECTED_ASSISTS FLOAT,
    EXPECTED_GOALS_INVOLVEMENTS FLOAT,
    EXPECTED_GOALS_CONCEDED FLOAT,
    TOTAL_POINTS INT,
    IN_DREAMTEAM BOOLEAN,
    FIXTURE_ID INT,
    GAMEWEEK INT
);

DROP TABLE PLAYER_DATA;

// CREATE PLAYER DATA TABLE

CREATE OR REPLACE TABLE SATHIYADB.PUBLIC.PLAYER_DATA (
    ID INT,
    PLAYER_ID INT,
    FIRST_NAME VARCHAR(30),
    LAST_NAME VARCHAR(30),
    TEAM_ID INT,
    PLAYER_TYPE INT,
    MINUTES_PLAYED INT,
    FORM FLOAT,
    FORM_RANK INT,
    GOALS INT,
    ASSISTS INT,
    CLEAN_SHEETS INT,
    GOALS_CONCEDED INT,
    OWN_GOALS INT,
    PENALTIES_SCORED INT,
    PENALTIES_MISSED INT,
    YELLOW_CARDS INT,
    RED_CARDS INT,
    PLAYER_INFLUENCE FLOAT,
    PLAYER_INFLUENCE_RANK INT,
    PLAYER_CREATIVITY FLOAT,
    PLAYER_CREATIVITY_RANK INT,
    PLAYER_THREAT FLOAT,
    PLAYER_THREAT_RANK INT,
    PLAYER_STARTS INT,
    PLAYER_NEWS VARCHAR(50),
    NEWS_DATE DATETIME
);

// CREATE POSITION DATA TABLE

CREATE OR REPLACE TABLE SATHIYADB.PUBLIC.POSITION_DATA (
    ID INT,
    POSITION_ID INT,
    POSITION_NAME VARCHAR(10),
    SHORT_NAME VARCHAR(10),
    TOTAL_PLAYER_COUNT INT
);

// CREATE TEAM DATA TABLE

CREATE OR REPLACE TABLE SATHIYADB.PUBLIC.TEAM_DATA (
    ID INT,
    TEAM_ID INT,
    TEAM_NAME VARCHAR(30),
    TEAM_PLAYED INT,
    WIN INT,
    LOSS INT,
    DRAW INT,
    TEAM_POSITION INT,
    TEAM_STRENGTH INT,
    TEAM_FORM INT,
    SHORT_NAME VARCHAR(10),
    TEAM_CODE INT
);

DROP TABLE SATHIYADB.PUBLIC.PL_TABLE;

//create File Format

CREATE OR REPLACE FILE FORMAT SATHIYADB.PUBLIC.CSV_FILEFORMAT
    TYPE = CSV
    FIELD_DELIMITER = ','
    SKIP_HEADER = 1
    NULL_IF = ('NULL', 'null')
    EMPTY_FIELD_AS_NULL = TRUE;

-- CREATE OR REPLACE STAGE SATHIYADB.PUBLIC.AWS_STAGE
--     URL = 's3://fpl-etl-project-sathiya/transformed_data/pl_table_data/'
--     STORAGE_INTEGRATION = s3_conn
--     FILE_FORMAT = CSV_FILEFORMAT;

-- //COPY INTO SATHIYADB.PUBLIC.PL_TABLE FROM @SATHIYADB.PUBLIC.AWS_STAGE;

-- CREATE OR REPLACE pipe SATHIYADB.PIPES.PL_TABLE_PIPE1 auto_ingest = true AS
-- COPY INTO SATHIYADB.PUBLIC.PL_TABLE FROM @SATHIYADB.PUBLIC.AWS_STAGE
-- on_error = 'continue';

DROP STAGE SATHIYADB.PUBLIC.AWS_STAGE
SHOW PIPES;

//create External Stage

CREATE OR REPLACE STAGE SATHIYADB.PUBLIC.AWS_STAGE1
    URL = 's3://fpl-etl-project-sathiya/transformed_data'
    STORAGE_INTEGRATION = S3_CONN
    FILE_FORMAT = CSV_FILEFORMAT;

// create schema to organize data

CREATE OR REPLACE SCHEMA SATHIYADB.PIPES;

//copy data from s3 to table

COPY INTO SATHIYADB.PUBLIC.FIXTURE_DATA FROM @SATHIYADB.PUBLIC.AWS_STAGE1/fixture_data/fixture_transformed_data.csv;

COPY INTO SATHIYADB.PUBLIC.GM_PLAYER_DATA FROM @SATHIYADB.PUBLIC.AWS_STAGE1/individual_player_data/individual_player_data.csv;

TRUNCATE TABLE SATHIYADB.PUBLIC.PL_TABLE;

CREATE OR REPLACE PIPE SATHIYADB.PIPES.PL_TABLE_PIPE AUTO_INGEST = TRUE AS
COPY INTO SATHIYADB.PUBLIC.PL_TABLE FROM @SATHIYADB.PUBLIC.AWS_STAGE1/PL_TABLE_DATA/;

DESC PIPE SATHIYADB.PIPES.PL_TABLE_PIPE;

DROP PIPE SATHIYADB.PIPES.PL_TABLE_PIPE;

COPY INTO SATHIYADB.PUBLIC.PLAYER_DATA

FROM @SATHIYADB.PUBLIC.AWS_STAGE1/PLAYER_DATA/PLAYER_TRANSFORMED_DATA.CSV
ON_ERROR = 'continue';

COPY INTO SATHIYADB.PUBLIC.POSITION_DATA FROM @SATHIYADB.PUBLIC.AWS_STAGE1/player_position_data/position_transformed_data.csv;

COPY INTO SATHIYADB.PUBLIC.TEAM_DATA FROM @SATHIYADB.PUBLIC.AWS_STAGE1/team_data/team_transformed_data.csv;

SELECT
    *
FROM
    FIXTURE_DATA;

SELECT
    *
FROM
    GM_PLAYER_DATA;

SELECT
    *
FROM
    PL_TABLE;

SELECT
    *
FROM
    POSITION_DATA;

SELECT
    *
FROM
    TEAM_DATA;

SELECT
    *
FROM
    PLAYER_DATA;

ALTER TABLE PL_TABLE DROP COLUMN ID;

ALTER TABLE FIXTURE_DATA DROP COLUMN ID;

ALTER TABLE GM_PLAYER_DATA DROP COLUMN ID;

ALTER TABLE POSITION_DATA DROP COLUMN ID;

ALTER TABLE TEAM_DATA DROP COLUMN ID;

ALTER TABLE PLAYER_DATA DROP COLUMN ID;

------------------------------------------------
------------------------------------------------


#SNOWFLAKE - LOOKER STUDIO CONNECTOR ACCOUNT URL >> PSKOEOV-YK56131.SNOWFLAKECOMPUTING.COM

SELECT
    *
FROM
    POSITION_DATA;

SELECT
    *
FROM
    PLAYER_DATA;

// Ranking gameweek based on no. of goals

SELECT
    SUM(GOALS) AS TOTAL_GOALS,
    GAMEWEEK
FROM
    GM_PLAYER_DATA
GROUP BY
    GAMEWEEK
ORDER BY
    TOTAL_GOALS DESC;

// top 10 scoring players

SELECT
    P.PLAYER_ID,
    P.FIRST_NAME,
    P.LAST_NAME,
    P.GOALS,
    T.TEAM_NAME
FROM
    PLAYER_DATA P
    JOIN TEAM_DATA T
    ON P.TEAM_ID = T.TEAM_ID
ORDER BY
    P.GOALS DESC LIMIT 10;

SELECT
    P.*,
    T.TEAM_NAME,
    PL.*
FROM
    PLAYER_DATA P
    JOIN TEAM_DATA T
    ON P.TEAM_ID = T.TEAM_ID JOIN PL_TABLE PL
    ON PL.CLUB = T.SHORT_NAME;

// top 10 assists players

SELECT
    P.PLAYER_ID,
    P.FIRST_NAME,
    P.LAST_NAME,
    P.ASSISTS,
    T.TEAM_NAME
FROM
    PLAYER_DATA P
    JOIN TEAM_DATA T
    ON P.TEAM_ID = T.TEAM_ID
ORDER BY
    P.ASSISTS DESC LIMIT 10;

// top 10 clean sheets players

SELECT
    P.PLAYER_ID,
    P.FIRST_NAME,
    P.LAST_NAME,
    P.CLEAN_SHEETS,
    T.TEAM_NAME
FROM
    PLAYER_DATA P
    JOIN TEAM_DATA T
    ON P.TEAM_ID = T.TEAM_ID
WHERE
    P.PLAYER_TYPE = 1
ORDER BY
    P.CLEAN_SHEETS DESC LIMIT 10;

// team with most goals

SELECT
    *
FROM
    PL_TABLE;

SELECT
    *
FROM
    TEAM_DATA;